<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Udforsk Data i Python on Introduktion til Python til Dataanalyse</title>
    <link>/udforsk/</link>
    <description>Recent content in Udforsk Data i Python on Introduktion til Python til Dataanalyse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/udforsk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deskriptive mål</title>
      <link>/udforsk/deskriptive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/udforsk/deskriptive/</guid>
      <description>Én måde at udforske et datasæt er ved at se nærmere på forskellige deskriptive mål for variable i datasættet.
Metoden .describe() danner deskriptive mål for alle (kompatible) variable i datasættet:
ess2014.describe() 
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>idno</th>
      <th>cgtsday</th>
      <th>height</th>
      <th>weight</th>
      <th>yrbrn</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>751.000000</td>
      <td>166.000000</td>
      <td>749.000000</td>
      <td>740.000000</td>
      <td>751.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>935322.402130</td>
      <td>11.397590</td>
      <td>174.158879</td>
      <td>76.178108</td>
      <td>1966.324900</td>
    </tr>
    <tr>
      <th>std</th>
      <td>8431.191754</td>
      <td>7.994604</td>
      <td>9.656126</td>
      <td>15.597381</td>
      <td>18.982895</td>
    </tr>
    <tr>
      <th>min</th>
      <td>921034.000000</td>
      <td>0.000000</td>
      <td>148.000000</td>
      <td>43.000000</td>
      <td>1914.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>928073.000000</td>
      <td>5.000000</td>
      <td>167.000000</td>
      <td>65.000000</td>
      <td>1952.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>935251.000000</td>
      <td>10.000000</td>
      <td>174.000000</td>
      <td>74.500000</td>
      <td>1966.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>942260.000000</td>
      <td>17.750000</td>
      <td>181.000000</td>
      <td>85.000000</td>
      <td>1982.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>950508.000000</td>
      <td>40.000000</td>
      <td>203.000000</td>
      <td>135.000000</td>
      <td>1999.000000</td>
    </tr>
  </tbody>
</table>
</div>

Metoden fungerer også på enkeltvariable:
ess2014[&amp;#39;weight&amp;#39;].describe() count 740.000000
mean 76.178108
std 15.597381
min 43.000000
25% 65.000000
50% 74.500000
75% 85.000000
max 135.000000
Name: weight, dtype: float64
 .describe() danner følgende mål:
 count: Antal svar ekskl. missing mean: Middelværdien std: Standardafvigelsen min: Minimumværdien 25%: 1.</description>
    </item>
    
    <item>
      <title>Visualisering af data med seaborn</title>
      <link>/udforsk/visualisering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/udforsk/visualisering/</guid>
      <description>En god måde at udforske sit datasæt er ved at anvende visualiseringer. På den måde kan man visuelt orientere sig i, hvad data indeholder og hvordan data fordeler sig.
I dette afsnit bruges pakken seaborn til at danne visualiseringer. seaborn bygger ovenpå matplotlib, men giver visualiseringerne et mere moderne udseende, og giver flere muligheder for at passe visualiseringen til.
Fordi seaborn bygger ovenpå matplotlib skal begge biblioteker importeres (læg mærke til importkonventionerne).</description>
    </item>
    
  </channel>
</rss>